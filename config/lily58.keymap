/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        eq: eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL>;
            label = "EQ";
        };

        neq: neq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL &kp EQUAL>;
            label = "NEQ";
        };

        emptyfunc: emptyfunc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp SPACE &kp EQUAL &kp GT &kp SPACE &kp RBKT &kp RBRC>;
            label = "EMPTYFUNC";
        };

        rect_left_half: rect_left_half {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp LEFT>;
            label = "RECT_LEFT_HALF";
        };

        rect_right_half: rect_right_half {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp RIGHT>;
            label = "RECT_RIGHT_HALF";
        };

        rect_two_thirds: rect_right_third {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp E>;
            label = "RECT_RIGHT_THIRD";
        };

        rect_third: rect_left_third {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp D>;
            label = "RECT_LEFT_THIRD";
        };

        rect_three_quarters: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp E &kp LSHIFT>;
            label = "NEW_MACRO";
        };

        rect_quarter: rect_quarter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp D &kp LSHIFT>;
            label = "RECT_QUARTER";
        };
    };

    combos {
        compatible = "zmk,combos";

        emptyfunccombo {
            bindings = <&emptyfunc>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Layer 0";
            bindings = <
&kp ESCAPE   &kp N1  &kp N2  &kp N3     &kp N4              &kp N5                                                  &kp N6                       &kp N7               &kp N8             &kp N9   &kp N0    &kp EQUAL
&lt 2 TAB    &kp Q   &kp W   &kp E      &kp R               &kp T                                                   &kp Y                        &kp U                &kp I              &kp O    &kp P     &lt 2 MINUS
&lt 1 ENTER  &kp A   &kp S   &kp D      &kp F               &kp G                                                   &kp H                        &kp J                &kp K              &kp L    &kp APOS  &lt 1 ENTER
&kp LSHFT    &kp Z   &kp X   &kp C      &kp V               &kp B                       &kp LBKT       &kp RBKT     &kp N                        &kp M                &kp COMMA          &kp DOT  &kp FSLH  &kp RSHFT
                             &kp LCTRL  &mt LEFT_ALT ENTER  &mt LEFT_COMMAND BACKSPACE  &lt 1 SPACE    &lt 1 SPACE  &mt RIGHT_COMMAND BACKSPACE  &mt RIGHT_ALT ENTER  &kp RIGHT_CONTROL
            >;
        };

        layer_1 {
            bindings = <
&trans         &trans       &trans           &trans            &trans            &trans                                  &trans    &trans    &trans    &trans     &trans         &kp GRAVE
&rect_quarter  &rect_third  &rect_left_half  &rect_right_half  &rect_two_thirds  &rect_three_quarters                    &trans    &trans    &trans    &trans     &trans         &trans
&trans         &trans       &trans           &trans            &trans            &trans                                  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans         &trans
&trans         &kp LBKT     &kp RBKT         &kp LEFT_BRACE    &kp RIGHT_BRACE   &trans                &trans    &trans  &trans    &kp PIPE  &kp SEMI  &kp COLON  &kp BACKSLASH  &trans
                                             &trans            &trans            &trans                &trans    &trans  &trans    &trans    &trans
            >;

            label = "Layer 1";
        };

        layer_2 {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5                     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL
&trans  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10                    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15                    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans   &trans   &trans   &trans   &trans   &trans    &trans  &trans        &trans        &trans        &trans        &trans        &trans
                          &trans   &trans   &trans   &trans    &trans  &trans        &trans        &trans
            >;

            label = "Layer 2";
        };
    };
};
